apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc'
        url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
    }
    maven {
        name = 'placeholderapi'
        url = 'http://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly 'org.bukkit:bukkit:1.13.1-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.9.2'
}

ext.configFile = file "build.properties"

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

jar {
    ext.plugin_version = config.plugin_version
    if (plugin_version.endsWith('-dev')) {
        plugin_version = plugin_version + "." + new Date().format('yyyyMMdd.HHmmss')
    }
    dependsOn configurations.runtime
    from {
        (configurations.runtime - configurations.compileOnly).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

group = config.plugin_group + '.' + config.plugin_id
version = project.jar.plugin_version

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "plugin_version", project.jar.plugin_version

    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'

        //replace placeholders
        expand(
                'main': project.group + '.' + project.config.plugin_name + 'Plugin',
                'plugin_name': project.config.plugin_name,
                'plugin_version': project.version,
                'author': project.config.author
        )
    }

    //copy everything else
    from(sourceSets.main.resources.srcDirs) {
        exclude 'plugin.yml'
    }
}
